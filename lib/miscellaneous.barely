function string=(string1: *, string2: *): boolean {
    variable string1_length = length(string1);
    variable string2_length = length(string2);

    if !(=(string1_length, string2_length)) {
        return false;
    };

    return string_length=(string1, string2, string1_length);
};

function string_length=(string1: *, string2: *, length: integer): boolean {
    variable i = 0;
    while <(i, length) {
        variable string1_character = *1(@cast_*(+(string1, i)));
        variable string2_character = *1(@cast_*(+(string2, i)));

        if !(=1(string1_character, string2_character)) {
            return false;
        };

        i = @cast_integer(+(i, 1));
    };

    return true;
};

function copy(from: *, to: *, size: integer) {
    variable i = 0;

    while <(i, size) {
        variable done_anything = false;
        if <(+(i, 8), size) {
            any_8<-(@cast_*any_8(+(to, i)), any_8->(@cast_*any_8(+(from, i))));
            i = integer+(i, 8);
            done_anything = true;
        };

        if !(done_anything) {
            any_1<-(@cast_*any_1(+(to, i)), any_1->(@cast_*any_1(+(from, i))));
            i = integer+(i, 1);
        };
    };
};
